@model shoeyStore.Models.ViewModels.ProductViewModel
@{
    ViewBag.Title = Model.ItemName;
    var user = (shoeyStore.Models.Cliente)Session["Logged"];
}

<div class="container">
    <div class="row">
        <div class="col-md-4">
            <div class="card p-5">
                <h1>@Model.ItemName</h1>
                <p>@Model.Nombre</p>
                <div class="d-flex-justify-content-end"><h3 id="price">Price: $XX.XX</h3></div>
                <form id="cartEntry">
                    <div class="row mb-4">
                        <div class="col-6">
                            <div class="form-group">
                                <label for="size">Size</label>
                                <select id="size" name="IDInventario" class="form-control" onchange="updatePrice()">
                                    @foreach (var inventoryItem in Model.InventoryEntries)
                                    {
                                        <option value="@inventoryItem.IDInventario" data-price="@inventoryItem.Precio">@inventoryItem.TallaUS</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-group">
                                <label for="quantity">Quantity</label>
                                <input type="number" id="quantity" name="Cantidad" class="form-control" min="1" max="100" value="1">
                            </div>
                        </div>
                    </div>

                    <input type="hidden" id="productId" name="IDProducto" value="@Model.IDProducto">
                    <div class="row g-2">
                        <div class="col-6">
                            <button id="buyNowButton" type="button" onclick="buyNow()" class="btn btn-success btn-block btn-lg h-100 w-100">
                                Buy Now
                            </button>
                        </div>
                        <div class="col-6">
                            <button id="addToCartButton" type="submit" class="btn btn-dark btn-block btn-lg h-100 w-100">
                                <i class="bi bi-plus-lg text-white p-2"></i>
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="col-md-8 d-flex justify-content-center">
            <img src="data:image;base64,@Model.ImagenBase64" class="img-fluid" alt="Product Image">
        </div>
    </div>
</div>
<div class="d-flex justify-content-center mt-5">
    <div><h3 class="fw-bold">Check out more items</h3><hr /></div>

</div>
<div id="carousel">@Html.Action("Carousel", "Home");</div>
<script>
    function addToCart() {
        handleButtonClick("@Url.Content("~/Cart/Add")", window.location.href);
    }

    function buyNow() {
        handleButtonClick("@Url.Content("~/Cart/Add")", "@Url.Content("~/Cart/Checkout")");
    }

    function handleButtonClick(apiUrl, redirectTo) {
        const URL = apiUrl;
        console.log("URL:", URL);

        let formData = new FormData(document.getElementById("cartEntry"));

        const apiCallPromise = fetch(URL, {
            method: "POST",
            body: formData
        }).then(function (response) {
            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }
            return response.text();
        });

        apiCallPromise.then(function (data) {
            console.log("Response data:", data);
            if (data === "200") {
                console.log("Redirecting to home page");
            } else {
                displayToast(data, "danger");
            }
        }).catch(function (error) {
            console.error("Error:", error);
        });

        window.location.href = redirectTo;
    }

    document.addEventListener("DOMContentLoaded", function () {
        console.log("Script loaded");

        const cartForm = document.getElementById("cartEntry");
        if (!cartForm) {
            console.error("Form with id 'cartEntry' not found");
            return;
        }

        document.getElementById("addToCartButton").addEventListener("click", function (ev) {
            ev.preventDefault();
            console.log("Add to Cart button clicked");
            addToCart();
        });

        document.getElementById("buyNowButton").addEventListener("click", function () {
            console.log("Buy Now button clicked");
            buyNow();
        });
    });
</script>

<script type="text/javascript">
    function updatePrice() {
        var sizeElement = document.getElementById('size');
        var selectedOption = sizeElement.options[sizeElement.selectedIndex];
        var selectedPrice = selectedOption.getAttribute('data-price');

        // Update the price display
        document.getElementById('price').innerText = '$' + selectedPrice;
    }
    window.onload = updatePrice;
</script>

